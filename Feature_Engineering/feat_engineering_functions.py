# -*- coding: utf-8 -*-
"""feat_engineering_functions

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MGr6YLe3IOwktPO-nzTrM98KPtmu1Uct
"""

import pandas as pd
import numpy as np
from sklearn.preprocessing import LabelEncoder

"""## **Grouping and Scaling**"""

def feat_scale(df1, df2, column):

  to_mean_nm = column+'_min_mean'
  to_std_nm = column+'_min_std'

  df1[to_mean_nm] = df1[column] - df1[column].mean()
  df1[to_std_nm] = df1[to_mean_nm] / df1[column].std()
  df2[to_mean_nm] = df2[column] - df2[column].mean()
  df2[to_std_nm] = df2[to_mean_nm] / df2[column].std()

  df1[to_mean_nm].fillna(-1, inplace=True)
  df2[to_mean_nm].fillna(-1, inplace=True)
  df1[to_std_nm].fillna(-1, inplace=True)
  df2[to_std_nm].fillna(-1, inplace=True)

  return df1, df2

def comb_feat_scaling(df1, df2, col1, col2):

    to_mean_nm = col1+'_to_mean_'+ col2
    to_std_nm = col1+'_to_std_'+ col2
    
    df1[to_mean_nm] = df1[col1]/ df1.groupby([col2])[col1].transform('mean')
    df1[to_std_nm] = df1[col1]/ df1.groupby([col2])[col1].transform('std')

    df2[to_mean_nm] = df2[col1]/ df2.groupby([col2])[col1].transform('mean')
    df2[to_std_nm] = df2[col1]/ df2.groupby([col2])[col1].transform('std')

    df1[to_mean_nm].fillna(-1, inplace=True)
    df2[to_mean_nm].fillna(-1, inplace=True)
    df1[to_std_nm].fillna(-1, inplace=True)
    df2[to_std_nm].fillna(-1, inplace=True)

    return df1, df2

"""## **Categorical Feature Label Encoding**"""

def label_encoding(df1, df2, categorical):

  for x in categorical:
    label_encoder = LabelEncoder()
    cat = df1[('%s' % (x))].astype(str)
    class_encoded = label_encoder.fit_transform(cat)
    df1[('%s' % (x))] = class_encoded

  for x in categorical:
    label_encoder = LabelEncoder()
    cat = df2[('%s' % (x))].astype(str)
    class_encoded = label_encoder.fit_transform(cat)
    df2[('%s' % (x))] = class_encoded

  return df1, df2